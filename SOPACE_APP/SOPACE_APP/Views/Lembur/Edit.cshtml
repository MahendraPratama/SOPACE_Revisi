@model SOPACE_MVC.Models.lembur

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/MasterLayout/MasterAdmin.cshtml";
}

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Requested",
        Value = "Requested"
    });
    listItems.Add(new SelectListItem
    {
        Text = "On Process",
        Value = "On Process"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Completed",
        Value = "Completed"
    });
}


<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12" style="margin-top:20px">
            <h1 class="page-header">Edit Data Lembur</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
    <div class="row">
        <form id="formAdd">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-lg-6">
                    <div class="form-group">
                        @Html.Label("ID Lembur", htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align: left;" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.id_lembur, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "lmbr" } })
                            @Html.ValidationMessageFor(model => model.id_lembur, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NIP, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align: left;" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.NIP, new { htmlAttributes = new { @class = "form-control", id = "nip", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.NIP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align: left;" })
                        <div class="col-md-5">
                            @Html.HiddenFor(model => model.stats)
                            @Html.DropDownList("Status", new SelectList(listItems, "Value", "Text"), "Select Status", new
                                {@class = "form-control", id="status" })
                            @Html.ValidationMessageFor(model => model.stats, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-check-inline">
                        @Html.Label("Keterangan Status Lembur", htmlAttributes: new { @class = "control-label", @style = "text-align:left;" })
                        @Html.TextAreaFor(model => model.keterangan, new { @class = "form-control", id = "keterangan", style = "height: 95px; width:325px;" })
                        @Html.ValidationMessageFor(model => model.keterangan, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-md-4", style="text-align: left;">Tanggal</label>
                        @*@Html.Label("Tanggal", htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align: left;" })*@
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.tanggal, new { htmlAttributes = new { @class = "form-control", type = "date", id = "tgl", required = "required" } })
                            @Html.ValidationMessageFor(model => model.tanggal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Jam Mulai Lembur", htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align: left;" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.jam_mulai, new { htmlAttributes = new { @class = "form-control", type = "time", id = "jamm", required = "required" } })
                            @Html.ValidationMessageFor(model => model.jam_mulai, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Jam Selesai Lembur", htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align: left;" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.jam_selesai, new { htmlAttributes = new { @class = "form-control", type = "time", id = "jams", required = "required" } })
                            @Html.ValidationMessageFor(model => model.jam_selesai, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Total Jam Lembur", htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align: left;" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.total_jam, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", id = "totjam" } })
                            @Html.ValidationMessageFor(model => model.total_jam, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-check-inline">
                        @Html.Label("Alasan Lembur", htmlAttributes: new { @class = "control-label", @style = "text-align: left;" })
                        @Html.TextAreaFor(model => model.alasan, new { @class = "form-control", id = "alasan", style = "height: 100px; width:367px;", required = "required" })
                        @Html.ValidationMessageFor(model => model.alasan, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
                <div class="form-group">
                    <div class="col-md-10" style="margin-left: 717px; padding-top:10px;">
                        <input type="submit" onclick="return confirm('Are you sure to edit this Form?')" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Cancel", "Show", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
        </form>
    </div>
</div>
@section script{
    <script>

        $().ready(function () {
            $("#totjam").html("");
            $("#jams, #jamm").change(function () {
                var stime = $('#jamm').val();
                var etime = $('#jams').val();
                var hours = etime.split(':')[0] - stime.split(':')[0];
                var minutes = etime.split(':')[1] - stime.split(':')[1];
                minutes = minutes.toString().length < 2 ? '0' + minutes : minutes;
                if (minutes < 0) {
                    hours--;
                    minutes = 60 + minutes;
                    if (hours < 0) {
                        $("#totjam").css("border-color", "red");
                    }
                    else {
                        $("#totjam").css("border-color", "");
                    }
                }
                hours = hours.toString().length < 2 ? '0' + hours : hours;
                $('#totjam').val(hours + ':' + minutes);
            });
        });

        $("#tgl").val('@Model.tanggal.Value.ToString("yyy-MM-dd")');

        $("#status").on("change", function (value) {
            var valueStatus = value.target.selectedOptions[0].value
            $("#stats").val(valueStatus);
        });

        $("#formAdd").on("submit", function (e) {
            var stime = $("#jamm").val();
            var etime = $("#jams").val();
            var nip = $("#nama").text();
            var tanggal = $("#tgl").val();

            if (stime > etime) {
                alert("Start Time Should Not Be Greater Than End Time");
            } else if (stime == '' || etime == '') {
                alert("Start Time Or End Time Cannot Be Null");
            } else if (tanggal == '') {
                alert("Date Cannot Null");
            } else {
                e.preventDefault();
                   let formdata = $(this).serialize();
                   $.ajax({
                        url: '@Url.Action("EditLembur", "Lembur")',
                        type: 'POST',
                        data: formdata,
                        success: function (data) {
                            alert("Edit Successfully..");
                            location.href = "/Lembur/Show";
                        }
                   });
            }
        });
    </script>
}