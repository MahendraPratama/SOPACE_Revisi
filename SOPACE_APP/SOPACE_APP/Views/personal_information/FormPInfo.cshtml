@using SOPACE_MVC.Models
@model SOPACE_MVC.Models.InsertPersonUser

@{
    ViewBag.Title = "InputDataKaryawan";
    Layout = TempData["MasterLayout"].ToString();   
}
<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Input Data Karyawan</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
    <div class="row">        
        @using (Html.BeginForm("Add", "PersonInfo", FormMethod.Post,new { enctype = "multipart/form-data", id="formAdd" })) {
            <div>
                <h3>Informasi Umum</h3>
                <section style="background-color:lightblue">
                    <div class="row">
                        <!-- kolom kiri -->
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label> NIP *</label>
                                <div class="input-group" id="nipGrupAdmin">
                                    @Html.EditorFor(model => model.Personal_Information.NIP, new { htmlAttributes = new { @class = "form-control",
                                            placeholder = "NIP  ex: ACE.YYYY.001", required = "true", @name = "Personal_Information_NIP" } })
                                    <div class="input-group-addon" style="padding:0px; background-color:transparent; border:none">
                                        <span>
                                            <input type="button" class="btn btn-primary" value="Generate NIP" id="btn_generate_nip" />
                                        </span>
                                    </div>
                                </div>
                                <div class="input-group" id="nipGrupUser">
                                    @Html.EditorFor(model => model.Personal_Information.NIP, new { htmlAttributes = new { @class = "form-control",
                                            placeholder = "NIP  ex: ACE.YYYY.001", @readonly = "true", @name = "Personal_Information_NIP" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label> Nama Pegawai *</label>
                                @Html.EditorFor(model => model.Personal_Information.nama_pegawai, new { htmlAttributes = new { @class = "form-control", placeholder = "Nama Pegawai", required = "" } })
                            </div>
                            <div class="form-group">
                                <label> Nomor HP</label>
                                @Html.EditorFor(model => model.Personal_Information.no_hp, new { htmlAttributes = new { @class = "form-control", placeholder = "Nomor HP ex: 081888xxxxxx" } })
                            </div>
                            <div class="form-group">
                                <label> Jenis Kelamin *</label>
                                @Html.DropDownListFor(model => model.Personal_Information.jenis_kelamin,
                                    new SelectList(Enum.GetValues(typeof(Gender))), "Select Gender",
                                    new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label> Agama *</label>
                                @Html.DropDownListFor(model => model.Personal_Information.agama,
                                    new SelectList(Enum.GetValues(typeof(Agama))), "Select Religion",
                                    new { @class = "form-control" })
                            </div>                            
                        </div>
                        <!-- end kolom kiri -->
                        <!-- kolom kanan -->
                        <div class="col-md-4 col-md-offset-1">
                            <div class="form-group">  
                                <label>Foto Profil</label>
                                <div class="input-group">
                                    <img id="imgProfil" alt="Sample Image" align="middle" style="border-radius:50%; width:300px;height:300px;" />
                                    <span style="position:absolute; bottom:0; right:0; z-index:1">
                                        <a onclick="uploadProfil()" class="btn btn-primary btn-circle">
                                            <i class="fa fa-camera"></i>
                                        </a>
                                        <input type="file" name="File_Dokumen_foto_profil" id="inpFotoProfil" style="opacity:0"/>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <!-- end kolom kanan -->
                    </div>
                    <p>(*) Harus di isi</p>
                </section>
                <h3>Detail</h3>
                <section style="background-color:lightblue">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label> Tanggal Masuk *</label>
                                @Html.EditorFor(model => model.Personal_Information.tgl_masuk, new { htmlAttributes = new
                                   { @class = "form-control", type = "date", required = "true" } })
                            </div>
                            <div class="form-group">
                                <label> Tanggal Lahir *</label>
                                @Html.EditorFor(model => model.Personal_Information.tgl_lahir, new { htmlAttributes = new { @class = "form-control", placeholder = "dd/mm/yyyy", type = "date", required = "true" } })
                            </div>
                            <div class="form-group">
                                <label> Nomor KTP *</label>
                                @Html.EditorFor(model => model.Personal_Information.no_ktp, new { htmlAttributes = new { @class = "form-control", placeholder = "Nomor KTP", required = "true" } })
                            </div>
                            <div class="form-group">
                                <label> Alamat Identitas</label>
                                @Html.TextAreaFor(model => model.Personal_Information.alamat_identitas, new { @class = "form-control", rows = "3" })
                            </div>
                            <div class="form-group">
                                <label> Alamat Domisili</label>
                                @Html.TextAreaFor(model => model.Personal_Information.alamat_domisili, new { @class = "form-control", rows = "3" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label> Email</label>
                                @Html.EditorFor(model => model.Personal_Information.email, new { htmlAttributes = new { @class = "form-control", type = "email", placeholder = "Email" } })
                            </div>
                            <div class="form-group">
                                <label> Pendidikan</label>
                                @Html.EditorFor(model => model.Personal_Information.pendidikan, new { htmlAttributes = new { @class = "form-control", placeholder = "Pendidikan" } })
                            </div>
                            <div class="form-group">
                                <label> Jurusan</label>
                                @Html.EditorFor(model => model.Personal_Information.jurusan, new { htmlAttributes = new { @class = "form-control", placeholder = "Jurusan" } })
                            </div>
                            <div class="form-group">
                                <label> NPWP</label>
                                @Html.EditorFor(model => model.Personal_Information.NPWP, new { htmlAttributes = new { @class = "form-control", placeholder = "NPWP" } })
                            </div>
                            <div class="form-group">
                                <label> Nomor Rekening</label>
                                @Html.EditorFor(model => model.Personal_Information.no_rek, new { htmlAttributes = new { @class = "form-control", placeholder = "Nomor Rekening" } })
                            </div>
                            <div class="form-group">
                                <label> Status Pajak</label>
                                @Html.EditorFor(model => model.Personal_Information.status_pajak, new { htmlAttributes = new { @class = "form-control", placeholder = "Status Pajak" } })
                            </div>
                            <div class="form-group">
                                <label> Penempatan (*)</label>
                                @Html.EditorFor(model => model.Personal_Information.penempatan, 
                                    new { htmlAttributes = new { @class = "form-control", placeholder = "Penempatan", required="true" } })
                            </div>
                            <div class="form-group">
                                <label> Posisi (*)</label>
                                @Html.EditorFor(model => model.Personal_Information.posisi,
                                    new { htmlAttributes = new { @class = "form-control", placeholder = "Posisi", required = "true" } })
                            </div>
                        </div>
                    </div>
                    <p>(*) Harus di isi</p>
                </section>
                <h3>Account</h3>
                <section style="background-color:lightblue">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label> Username *</label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.User.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username", required = "true" } })
                                    <div class="input-group-addon" style="padding:0px; background-color:transparent; border:none">
                                        <span>
                                            <input type="button" class="btn btn-primary" value="Generate Username" id="btn_generate_usrnm" />
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label> Password *</label>
                                <div class="input-group">
                                    @Html.EditorFor(model => model.User.password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                    <div class="input-group-addon" style="padding:0px; background-color:transparent; border:none">
                                        <i id="showPassword" class="glyphicon glyphicon-eye-open btn btn-primary"></i>
                                    </div>
                                </div>
                            </div>
                            <div>
                                @Html.HiddenFor(model => model.User.NIP)
                                @Html.HiddenFor(model => model.User.role)
                                @Html.HiddenFor(model => model.File_Dokumen.NIP)
                                @Html.HiddenFor(model => model.File_Dokumen.id_dok)
                                @Html.HiddenFor(m=>m.File_Dokumen.foto_profil)
                                @Html.HiddenFor(m=>m.File_Dokumen.foto_buku_rekening)
                                @Html.HiddenFor(m=>m.File_Dokumen.cv)
                            </div>
                        </div>
                    </div>
                    <p>(*) Harus di isi</p>
                </section>
                <h3>File Dokumen</h3>
                <section style="background-color:lightblue">
                    <div class="form-group">
                        <label> Foto Buku Rekening</label>
                        <div class="input-group">
                            <input type="file" name="File_Dokumen_foto_buku_rekening" id="inpFileRek" />
                        </div>
                        @Html.ActionLink("Download","DownloadFile","PersonInfo",
                            new { fileName = @TempData["fotoBkRek"], nip = TempData["nip"]},
                            new { @id= "dwnld_bukuRek"})
                    </div>
                    <div class="form-group">
                        <label> Foto KTP</label>
                        <div class="input-group">
                            <input type="file" name="File_Dokumen_cv" id="inpFileCV" />
                        </div>
                        @Html.ActionLink("Download","DownloadFile","PersonInfo",
                            new { fileName = @TempData["CV"], nip = TempData["nip"]},
                            new { @id= "dwnld_CV"})
                    </div>
                </section>
            </div>
        }        
    </div>
</div>

@section Script{
    <script src="~/Scripts/lodash.js"></script>
    <script>
        var form = $("#formAdd");
        var id_nip = $("#Personal_Information_NIP");
        var id_username = $("#User_username");
        var actionLink = "";   
        var EditOrAdd = "";        
        //var response;
        var onFinishedReload;
        $().ready(function () {
            $("#User_password").attr("type", "password");
            $("#showPassword").click(function () {
                let txtPwd = $("#User_password");                
                if (txtPwd.attr("type") == "password") {
                    txtPwd.attr("type", "text");
                } else {                    
                    txtPwd.attr("type", "password");
                }
                
            });
            
            if (id_nip.val().length > 0) { //==================================== IF EDIT =========================
                console.log("this is edit");                
                actionLink = '@Url.Action("Update", "PersonInfo")';
                $("#Personal_Information_tgl_lahir").val('@TempData["tglLahir"]');
                $("#Personal_Information_tgl_masuk").val('@TempData["tglMasuk"]');
                $("#Personal_Information_tgl_masuk").attr("readonly");
                EditOrAdd = "EDIT";
                //================
                @{ 
                    var sessRole = "";
                    try
                    {
                        sessRole = Session["user_role"].ToString();
                    }
                    catch (Exception)
                    {
                        sessRole = "out";
                    }
                }
                let role = '@sessRole';
                if (role == 'out') {
                    location.href = '/home';
                }
                else if (role == 'user') {
                    //$("#Personal_Information_NIP").addClass("disabled");
                    $("#nipGrupAdmin").hide();
                    $("#nipGrupUser").show();
                    onFinishedReload = '/user'
                    $("#formgrupStatus").hide();
                } else {
                    onFinishedReload = '/PersonInfo/ViewAll'
                    $("#nipGrupUser").hide();
                    $("#nipGrupAdmin").show();
                }
                //=========================================================================
                var nmFotoProfil = '@TempData["fotoProfil"]';
                $("#File_Dokumen_foto_profil").val('@TempData["fotoProfil"]');                
                $("#File_Dokumen_foto_buku_rekening").val('@TempData["fotoBkRek"]');
                $("#File_Dokumen_cv").val('@TempData["CV"]');
                let nip = $("#Personal_Information_NIP").val();
                if (nmFotoProfil.length > 0) {
                    $("#imgProfil").attr("src", `../../Content/uploads/${nip}/${nmFotoProfil}`);
                } else {
                    $("#imgProfil").attr("src", `../../Content/defaultImage/placeholder.png`);
                }                
                //=========================================================================
                if ($("#File_Dokumen_cv").val() === '') {
                    $("#dwnld_CV").hide();
                }
                if ($("#File_Dokumen_foto_buku_rekening").val() === '') {
                    $("#dwnld_bukuRek").hide();
                }
            } else { //========================================================== IF ADD ==========================
                console.log("this is add");
                $("#imgProfil").attr("src", `../Content/defaultImage/placeholder.png`);
                actionLink = '@Url.Action("Add", "PersonInfo")';
                $("#dwnld_fotoProfil").hide();
                $("#dwnld_CV").hide();
                $("#dwnld_bukuRek").hide();
                $("#File_Dokumen_foto_profil").val('');
                $("#File_Dokumen_foto_buku_rekening").val('');
                $("#File_Dokumen_cv").val('');
                $("#nipGrupUser").hide();
                $("#nipGrupAdmin").show();                
                onFinishedReload = '/PersonInfo/ViewAll';
                EditOrAdd = "ADD";
            }
        });

        function uploadProfil() { 
            if ($("#Personal_Information_NIP").val().length < 1) {
                alert("Input NIP Terlebih Dahulu");
            } else {
                $('#inpFotoProfil').click()
            }
        };
        
        //==================================================== JQUERY VALIDATOR METHOD
        jQuery.validator.addMethod("NIPFormat", function (value, element) {
            return this.optional(element) || /^\d*([ACE]{3}).([0-9]{4}).([0-9]{3}$)/.test(value);
        }, "Format NIP Salah");

        jQuery.validator.addMethod("NIKFormat", function (value, element) {
            let noKTPregex = /^((1[1-9])|(21)|([37][1-6])|(5[1-4])|(6[1-5])|([8-9][1-2]))[0-9]{2}[0-9]{2}(([0-6][0-9])|(7[0-1]))((0[1-9])|(1[0-2]))([0-9]{2})[0-9]{4}$/;
            return this.optional(element) || noKTPregex.test(value);
        }, "Format Nomor KTP Salah");        
        
        $.validator.addMethod(
            "uniqueUserName",
            function (value, element) {
                
                $.get('@Url.Action("CekUsername","PersonInfo")',
                    { 'username': value, 'nip': $("#Personal_Information_NIP").val()},
                    function (msg) {                       
                       response = (msg == 'true') ? true : false;
                    }
                )
                return response;
            },
            "Username is Already Taken"
        );
        
        //==================================================== FORM VALIDATION
        form.validate({
            errorPlacement: function errorPlacement(error, element) { element.after (error); },
            rules: {
                "Personal_Information.NIP": {
                    required: true,
                    NIPFormat: true
                },
                "Personal_Information.no_ktp": {
                    required: true,
                    NIKFormat: true
                },
                "Personal_Information.email": {
                    email: true
                },
                "Personal_Information.jenis_kelamin": {                  
                    required: true
                },
                "Personal_Information.agama": {
                    required: true
                },
                "User.username": {
                    uniqueUserName: true
                }
            },
            messages: {
                "Personal_Information.NIP": {
                    required: "NIP harus di isi"
                },
                "Personal_Information.no_ktp": {
                    required: "Nomor KTP harus di isi"
                },
                "Personal_Information.nama_pegawai": "Nama Pegawai harus di isi",
                "Personal_Information.tgl_lahir": "Tanggal Lahir harus di isi",
                "Personal_Information.tgl_masuk": "Tanggal Masuk harus di isi",
                "Personal_Information.jenis_kelamin": "Pilih Gender terlebih dahulu",
                "Personal_Information.agama": "Pilih Agama terlebih dahulu",
                "Personal_Information.email": {
                    email: "Format email salah"
                }
            }
        });
        //================================================================================ JQUERY STEPS
        form.children("div").steps({
            headerTag: "h3",
            bodyTag: "section",
            transitionEffect: "slideLeft",
            enableCancelButton: true,
            onInit: function (event, current) {                
                $("#formAdd input[id=btn_generate_nip]").on("click", function () {
                    $.get('@Url.Action("CekNIP", "PersonInfo")', function (data) {
                        $("#Personal_Information_NIP").val(data);
                        $("#Personal_Information_NIP").focusout();
                    });
                });

                $("#User_password").val("ACE" + (new Date()).getFullYear());
                $("#btn_generate_usrnm").on("click", function () {
                    let nmArr = $("#Personal_Information_nama_pegawai").val().split(" ");                                        
                    let usrnmArr = _.sampleSize(nmArr, 2);    
                    usrnameVal = usrnmArr[0] + "_" + usrnmArr[1];
                    $("#User_username").val(usrnameVal);                                       
                });

                //============================================================================== UPLOAD FILE
                $("input[type=file]").on("change", function (value) {                    
                    let formdata = new FormData();
                    let nip = $("#Personal_Information_NIP").val();
                    let filename = value.target.files[0].name;
                    let jenisDokumen = value.target.name;
                    let HttpFile = value.target.files[0];

                    formdata.append(filename, HttpFile);
                    formdata.append("tipeFile", jenisDokumen);
                    formdata.append("nip", nip);

                    $(`#${jenisDokumen}`).val(filename);

                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', '@Url.Action("Upload","PersonInfo")');
                    xhr.send(formdata);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200) {                            
                            if (value.target.name == "File_Dokumen_foto_profil") {
                                if (EditOrAdd == 'ADD') {
                                    $("#imgProfil").attr("src", `../Content/uploads/${nip}/${filename}`);
                                } else {
                                    $("#imgProfil").attr("src", `../../Content/uploads/${nip}/${filename}`);
                                }
                                
                            }
                        }
                    }
                    return false;
                });//------------------------------------------------------------------------------------------
            },
            onStepChanging: function (event, currentIndex, newIndex) {
                if (currentIndex > 0) {
                    let nip = $("#Personal_Information_NIP").val();
                    $("#User_NIP").val(nip);
                    $("#File_Dokumen_NIP").val(nip); 
                    $("#File_Dokumen_id_dok").val(nip); 
                    $("#User_role").val("user");
                }
                if (newIndex < currentIndex) {                    
                    return true;
                } else {
                    form.validate().settings.ignore = ":disabled,:hidden";
                    return form.valid();
                }
            },
            onCanceled: function (event) {
                location.reload();
            },
            onFinishing: function (event, currentIndex) {
                form.validate().settings.ignore = ":disabled";
                return form.valid();
            },
            onFinished: function (event, currentIndex) {
                event.preventDefault();
                let formdata = form.serialize();                
                $.ajax({
                    url: actionLink,
                    type: 'POST',
                    data: formdata
                });
                alert("Insert Data Success");
                location.href = onFinishedReload;
            },
            labels: {
                previous: '<i class="fa fa-arrow-circle-left"></i> Prev',
                next: 'Next <i class="fa fa-arrow-circle-right"></i>',
                finish: 'Save <i class="fa fa-save"></i>'
            }
        });
    
    </script>
}
